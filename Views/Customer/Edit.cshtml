@model WaterService.Models.Customer
@{
    ViewData["Title"] = "Edit Customer";
}

<div class="customer-form">
    <div class="page-header mb-4">
        <h1 class="h3 mb-0">Edit Customer</h1>
        <p class="text-muted">Update customer information for <strong>@Model.CustomerCode</strong>.</p>
    </div>

    <div class="row">
        <!-- Left: Customer Info & Edit Form -->
        <div class="col-lg-7">
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-user-edit"></i> Customer Information</h6>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" method="post" autocomplete="off">
                        <input asp-for="Id" type="hidden" />
                        <input asp-for="CustomerCode" type="hidden" />
                        <input asp-for="CreatedAt" type="hidden" />

                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                        <div class="mb-3">
                            <label class="form-label">Customer ID</label>
                            <input type="text" class="form-control" value="@Model.CustomerCode" readonly />
                            <small class="text-muted">Customer ID cannot be changed</small>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Name" class="form-label"></label>
                            <input asp-for="Name" class="form-control" placeholder="Enter household head name" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Address" class="form-label"></label>
                            <textarea asp-for="Address" class="form-control" rows="3" placeholder="Enter complete address"></textarea>
                            <span asp-validation-for="Address" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="PhoneNumber" class="form-label"></label>
                            <input asp-for="PhoneNumber" class="form-control" placeholder="e.g., 0901234567" />
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Notes" class="form-label"></label>
                            <textarea asp-for="Notes" class="form-control" rows="2" placeholder="Additional notes or special requirements"></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>

                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Update Customer
                            </button>
                            <a href="@Url.Action("Details", new { id=Model.Id })" class="btn btn-secondary">
                                <i class="fas fa-times"></i> Cancel
                            </a>
                            <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                                <i class="fas fa-list"></i> Back to List
                            </a>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Add New Meter Reading -->
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-tachometer-alt"></i> Add New Meter Reading</h6>
                </div>
                <div class="card-body">
                    <form asp-action="AddOrEditMeterReading" method="post" class="row g-3 align-items-end">
                        <input type="hidden" name="CustomerId" value="@Model.Id" />
                        <input type="hidden" name="Id" value="" />
                        <div class="col-md-2">
                            <label class="form-label">Quarter</label>
                            <select class="form-select" name="Quarter" required>
                                <option value="">Select</option>
                                @for (int q = 1; q <= 4; q++)
                                {
                                    <option value="@q">Q@q</option>
                                }
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Year</label>
                            <input type="number" class="form-control" name="Year" value="@DateTime.Now.Year" required min="2000" max="2100" />
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Previous</label>
                            <input type="number" step="1" class="form-control" name="PreviousReading" required />
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Current</label>
                            <input type="number" step="1" class="form-control" name="CurrentReading" required />
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">Notes</label>
                            <input type="text" class="form-control" name="Notes" />
                        </div>
                        <div class="col-md-2">
                            <button type="submit" class="btn btn-primary w-100">Add</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Right: Customer Meta & Meter Reading History -->
        <div class="col-lg-5">
            <div class="card mb-4">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-info-circle"></i> Account Details</h6>
                </div>
                <div class="card-body">
                    <div class="mb-2">
                        <small class="text-muted">Customer ID</small>
                        <div><strong>@Model.CustomerCode</strong></div>
                    </div>
                    <div class="mb-2">
                        <small class="text-muted">Created</small>
                        <div>@Model.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")</div>
                    </div>
                    <div class="mb-2">
                        <small class="text-muted">Last Updated</small>
                        <div>@Model.UpdatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")</div>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.Notes))
                    {
                        <div class="mb-2">
                            <small class="text-muted">Notes</small>
                            <div>@Model.Notes</div>
                        </div>
                    }
                </div>
            </div>

            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0"><i class="fas fa-list"></i> Meter Reading History</h6>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover align-middle mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>Quarter</th>
                                    <th>Year</th>
                                    <th>Prev</th>
                                    <th>Curr</th>
                                    <th>Usage</th>
                                    <th>Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.MeterReadings != null && Model.MeterReadings.Any())
                                {
                                    foreach (var reading in Model.MeterReadings.OrderByDescending(r => r.Year).ThenByDescending(r => r.Quarter))
                                    {
                                        <tr data-id="@reading.Id">
                                            <td>@reading.Quarter</td>
                                            <td>@reading.Year</td>
                                            <td>@reading.OldIndex</td>
                                            <td>@reading.NewIndex</td>
                                            <td>@(reading.Consumption)</td>
                                            <td>@reading.CreatedAt.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                <button type="button" class="btn btn-sm btn-warning btn-edit-reading" data-id="@reading.Id">Edit</button>
                                                <button type="button" class="btn btn-sm btn-danger btn-delete-reading" data-id="@reading.Id">Delete</button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="8" class="text-center text-muted">No meter readings found</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Edit Meter Reading Modal -->
    <div class="modal fade" id="editReadingModal" tabindex="-1" aria-labelledby="editReadingModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <form id="editReadingForm">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editReadingModalLabel">Edit Meter Reading</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body row g-3">
                        <input type="hidden" name="Id" id="editReadingId" />
                        <input type="hidden" name="CustomerId" value="@Model.Id" />
                        <div class="col-md-6">
                            <label class="form-label">Quarter</label>
                            <input type="number" class="form-control" name="Quarter" id="editQuarter" min="1" max="4" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Year</label>
                            <input type="number" class="form-control" name="Year" id="editYear" required min="2000" max="2100" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Previous</label>
                            <input type="number" class="form-control" name="PreviousReading" id="editOldIndex" required />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Current</label>
                            <input type="number" class="form-control" name="CurrentReading" id="editNewIndex" required />
                        </div>
                        <div class="col-12">
                            <label class="form-label">Notes</label>
                            <input type="text" class="form-control" name="Notes" id="editNotes" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Auto-save form data to localStorage
            $('input, textarea, select').on('change', function () {
                saveFormData();
            });

            // Load saved form data
            loadFormData();
        });

        function saveFormData() {
            const formData = {
                householdHeadName: $('#HouseholdHeadName').val(),
                address: $('#Address').val(),
                phoneNumber: $('#PhoneNumber').val(),
                status: $('#Status').val(),
                notes: $('#Notes').val()
            };
            localStorage.setItem('customerEditFormData', JSON.stringify(formData));
        }

        function loadFormData() {
            const savedData = localStorage.getItem('customerEditFormData');
            if (savedData) {
                const formData = JSON.parse(savedData);
                $('#HouseholdHeadName').val(formData.householdHeadName || '');
                $('#Address').val(formData.address || '');
                $('#PhoneNumber').val(formData.phoneNumber || '');
                $('#Status').val(formData.status || '');
                $('#Notes').val(formData.notes || '');
            }
        }

        // Clear saved data on successful form submission
        $('form').on('submit', function () {
            localStorage.removeItem('customerEditFormData');
        });

        $(function () {
    // Xoá chỉ số nước
    $('.btn-delete-reading').on('click', function () {
        if (!confirm('Are you sure you want to delete this reading?')) return;
        var id = $(this).data('id');
        $.ajax({
            url: '@Url.Action("DeleteMeterReading", "Customer")',
            type: 'POST',
            data: {
                id: id,
                customerId: '@Model.Id',
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            },
            success: function () {
                $('tr[data-id="' + id + '"]').remove();
            },
            error: function () {
                alert('Delete failed!');
            }
        });
    });

    // Hiển thị modal sửa chỉ số nước
    $('.btn-edit-reading').on('click', function () {
        var id = $(this).data('id');
        var row = $('tr[data-id="' + id + '"]');
        $('#editReadingId').val(id);
        $('#editQuarter').val(row.find('td:eq(0)').text());
        $('#editYear').val(row.find('td:eq(1)').text());
        $('#editOldIndex').val(row.find('td:eq(2)').text());
        $('#editNewIndex').val(row.find('td:eq(3)').text());
        $('#editNotes').val(row.find('td:eq(5)').text());
        var modal = new bootstrap.Modal(document.getElementById('editReadingModal'));
        modal.show();
    });

    // Submit sửa chỉ số nước
    $('#editReadingForm').on('submit', function (e) {
        e.preventDefault();
        $.ajax({
            url: '@Url.Action("AddOrEditMeterReading", "Customer")',
            type: 'POST',
            data: $(this).serialize() + '&__RequestVerificationToken=' + $('input[name="__RequestVerificationToken"]').val(),
            success: function () {
                location.reload(); // Hoặc cập nhật lại dòng trong bảng bằng JS nếu muốn mượt hơn
            },
            error: function () {
                alert('Update failed!');
            }
        });
    });
});
    </script>
}